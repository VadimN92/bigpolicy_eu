{"version":3,"file":"landing.component.js","sourceRoot":"","sources":["../../../Users/rsiryk/dev/BP/qa-dev/tmp/broccoli_type_script_compiler-input_base_path-PZe5mwZO.tmp/0/src/app/landing/components/landing.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAC1C,uBAAyB,kCAAkC,CAAC,CAAA;AAC5D,0BAAwC,wCAAwC,CAAC,CAAA;AACjF,qBAAmC,yBAAyB,CAAC,CAAA;AAC7D,qBAAuC,8BAA8B,CAAC,CAAA;AACtE,uBAAkC,iBAAiB,CAAC,CAAA;AAWpD;IAAA;QACE,gBAAW,GAAG,GAAG,CAAC;QAClB,eAAU,GAAG,GAAG,CAAC;QACjB,cAAS,GAAG,GAAG,CAAC;QAEhB,yCAAyC;QACzC,UAAK,GAAU;YACb,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAC;YACnD,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,EAAC;YACpD,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAC;YACrD,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAC;SACnD,CAAC;QAEF,SAAI,GAAa;YACf,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE;YACjC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE;YAChC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;YAC/B,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE;YACjC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;YAC/B,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE;SAClC,CAAC;QAEF,cAAS,GAAW,CAAC,CAAC;QACtB,mBAAc,GAAW,GAAG,CAAC;QAC7B,gBAAW,GAAW,CAAC,CAAC;QACxB,kBAAa,GAAW,OAAO,CAAC;QAChC,UAAK,GAAW,KAAK,CAAC;IAexB,CAAC;IAbC,sCAAW,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,mCAAQ,GAAR;QACE,6BAA6B;QAC7B,oDAAoD;QACpD,+EAA+E;QAC/E,6DAA6D;QAC7D,+DAA+D;QAC/D,MAAM,CAAC,aAAa,CAAC;QACrB,kDAAkD;IACpD,CAAC;IAjDH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,WAAW,EAAE,0BAA0B;YACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;YACtC,UAAU,EAAE,CAAC,mCAAuB,EAAE,0BAAiB,EAAE,yBAAkB,EAAE,iBAAQ,EAAE,aAAM,CAAC;YAC9F,SAAS,EAAE,CAAC,qBAAc,CAAC;SAC5B,CAAC;;wBAAA;IA2CF,uBAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,wBAAgB,mBAyC5B,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { MdButton } from '@angular2-material/button/button';\nimport { MD_GRID_LIST_DIRECTIVES } from '@angular2-material/grid-list/grid-list';\nimport { MD_CARD_DIRECTIVES } from '@angular2-material/card';\nimport { MdIcon, MdIconRegistry } from '@angular2-material/icon/icon';\nimport { ROUTER_DIRECTIVES } from '@angular/router';\n\n@Component({\n  selector: 'bp-landing',\n  moduleId: module.id,\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css'],\n  directives: [MD_GRID_LIST_DIRECTIVES, ROUTER_DIRECTIVES, MD_CARD_DIRECTIVES, MdButton, MdIcon],\n  providers: [MdIconRegistry]\n})\n\nexport class LandingComponent {\n  leaderCount = 'å';\n  donorCount = 'ß';\n  coinCount = 'µ';\n\n  // FIXME - Legacy Demo Code To Be Removed\n  tiles: any[] = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\n\n  dogs: Object[] = [\n    { name: 'Porter', human: 'Kara' },\n    { name: 'Mal', human: 'Jeremy' },\n    { name: 'Koby', human: 'Igor' },\n    { name: 'Razzle', human: 'Ward' },\n    { name: 'Molly', human: 'Rob' },\n    { name: 'Husi', human: 'Matias' },\n  ];\n\n  fixedCols: number = 4;\n  fixedRowHeight: number = 100;\n  ratioGutter: number = 1;\n  fitListHeight: string = '400px';\n  ratio: string = '4:1';\n\n  addTileCols() {\n    this.tiles[2].cols++;\n  }\n\n  getColor() {\n    // let tunes = ['', 'light'];\n    // let colors = ['yellow', 'green', 'blue', 'grey'];\n    // let colors = ['red', 'orange', 'yellow', 'green', 'blue', 'violet', 'grey'];\n    // let randomTune = Math.floor(Math.random() * tunes.length);\n    // let randomColor = Math.floor(Math.random() * colors.length);\n    return 'transparent';\n    // return tunes[randomTune] + colors[randomColor];\n  }\n}\n"]}